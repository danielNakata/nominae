/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dnn.nominae.main.gui;

import dnn.moduloayudanominae.main.VAyuda;
import dnn.modulolog.log.Logger;
import dnn.nominae.conf.Config;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author danie
 */
public class NominaEMain extends javax.swing.JFrame {
    
    VAyuda vayuda = null;

    /**
     * Creates new form NominaEMain
     */
    public NominaEMain() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        if(!Config.configCargada)
            Config.cargaConfiguracion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DeskPane = new javax.swing.JDesktopPane();
        toolPane = new javax.swing.JToolBar();
        cmbMenu = new javax.swing.JMenuBar();
        menuAplicacion = new javax.swing.JMenu();
        optIniciarSesion = new javax.swing.JMenuItem();
        optCerrarSesion = new javax.swing.JMenuItem();
        optSalir = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        optAyuda = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("NominaE - Menu principal");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        javax.swing.GroupLayout DeskPaneLayout = new javax.swing.GroupLayout(DeskPane);
        DeskPane.setLayout(DeskPaneLayout);
        DeskPaneLayout.setHorizontalGroup(
            DeskPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        DeskPaneLayout.setVerticalGroup(
            DeskPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 590, Short.MAX_VALUE)
        );

        toolPane.setRollover(true);

        menuAplicacion.setText("Aplicacion");

        optIniciarSesion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        optIniciarSesion.setText("Iniciar Sesion");
        menuAplicacion.add(optIniciarSesion);

        optCerrarSesion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        optCerrarSesion.setText("Cerrar Sesion");
        optCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optCerrarSesionActionPerformed(evt);
            }
        });
        menuAplicacion.add(optCerrarSesion);

        optSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        optSalir.setText("Salir");
        optSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optSalirActionPerformed(evt);
            }
        });
        menuAplicacion.add(optSalir);

        cmbMenu.add(menuAplicacion);

        menuAyuda.setText("Ayuda");

        optAyuda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        optAyuda.setText("Acerca de");
        optAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optAyudaActionPerformed(evt);
            }
        });
        menuAyuda.add(optAyuda);

        cmbMenu.add(menuAyuda);

        setJMenuBar(cmbMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DeskPane)
            .addComponent(toolPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1026, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(DeskPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolPane, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void optAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optAyudaActionPerformed
        try{
            boolean sacoVentana = false;
            for(int i=0; i<this.DeskPane.getComponentCount(); i++){
                if(this.DeskPane.getComponent(i).equals(this.vayuda)){
                    this.DeskPane.remove(i);
                    System.out.println("Lo saco del componente");
                    sacoVentana = true;
                    this.DeskPane.repaint();
                }
            }
            if((sacoVentana)||(this.vayuda == null)){
                vayuda = new VAyuda(Config.nombreApp, Config.descripcionApp, Config.versionApp, Config.desarrolladorApp, Config.lugarApp + " " + Calendar.getInstance().getTime().toString());
            }
            this.DeskPane.add(vayuda);
            this.vayuda.setVisible(true);
            this.vayuda.setLocation(0, 0);
            this.vayuda.setSize(this.vayuda.getPreferredSize().width, this.vayuda.getPreferredSize().height);
            this.vayuda.setSelected(true);
            this.DeskPane.setSelectedFrame(vayuda);
        }catch(Exception ex){
            Logger.log(Config.logRuta, Config.logArch, Logger.EXCEPCION, Config.nombreApp, this.getClass().toString(), "optAyudaActionPerformed", ex.toString(), ex);
        }
    }//GEN-LAST:event_optAyudaActionPerformed

    private void optSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optSalirActionPerformed
        try{
            if(JOptionPane.showConfirmDialog(null, "¿Desea Cerrar la Aplicacion? (Los cambios no guardados se perderan)", "NominaE - Cerrando Aplicacion", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.OK_OPTION){
                this.dispose();
            }
        }catch(Exception ex){
            Logger.log(Config.logRuta, Config.logArch, Logger.EXCEPCION, Config.nombreApp, this.getClass().toString(), "optSalirActionPerformed", ex.getMessage(), ex);
        }
    }//GEN-LAST:event_optSalirActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try{
            if(JOptionPane.showConfirmDialog(null, "¿Desea Cerrar la Aplicacion? (Los cambios no guardados se perderan)", "NominaE - Cerrando Aplicacion", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.OK_OPTION){
                this.dispose();
            }
        }catch(Exception ex){
            Logger.log(Config.logRuta, Config.logArch, Logger.EXCEPCION, Config.nombreApp, this.getClass().toString(), "formWindowClosing", ex.getMessage(), ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void optCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optCerrarSesionActionPerformed
        try{
            if(JOptionPane.showConfirmDialog(null, "¿Desea Cerrar la Sesion? (Los cambios no guardados se perderan)", "NominaE - Cerrando Sesion", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.OK_OPTION){
                this.dispose();
            }
        }catch(Exception ex){
            Logger.log(Config.logRuta, Config.logArch, Logger.EXCEPCION, Config.nombreApp, this.getClass().toString(), "optCerrarSesionActionPerformed", ex.getMessage(), ex);
        }
    }//GEN-LAST:event_optCerrarSesionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane DeskPane;
    private javax.swing.JMenuBar cmbMenu;
    private javax.swing.JMenu menuAplicacion;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenuItem optAyuda;
    private javax.swing.JMenuItem optCerrarSesion;
    private javax.swing.JMenuItem optIniciarSesion;
    private javax.swing.JMenuItem optSalir;
    private javax.swing.JToolBar toolPane;
    // End of variables declaration//GEN-END:variables
}
